1. 다음 어셈블리코드를 머신코드로 번역하시오. (C 코드는 참고용) 

== 

// C 코드 

clear1(int arrary[], int size) {

int i;

    for (i = 0; i < size; i += 1)

      array[i] = 0;

}

// 어셈블리 코드 

clear1:

addi x5, x0, 0    // 000000000000 | 00000 | 000 | 00101 | 0010011

loop:

slli x6,x5,2  // 000000000010 | 00101 | 001 | 00110 | 0010011

add x7,x10,x6  // 0000000 | 00110 | 01010 | 000 | 00111 | 0110011

sw x0,0(x7)    // 0000000 | 00000 | 00111 | 010 | 00000 | 0100011

addi x5,x5,1    // 000000000001 | 00101 | 000 | 00101 | 0010011

blt x5,x11,loop    // 


2. 다음 머신 코드를 어셈블리 코드로 변경하시오. 

0: 017b1663 


4: 015a09b3 

8: 00000463 

0000000c <Else>:

c: 415a09b3 

00000010 <Exit>:

10: 01300533 

3. RISC-V 레지스터를 128개로 늘리고, 명령어는 현재보다 4배 많게 확장하려고 한다.

(1)   이렇게 확장한다면, R-타입 명령어의 각각의 비트 필드 크기에 어떤 영향을 미치게 되는가?

(2)   이렇게 확장한다면, I-타입 명령어의 각각의 비트 필드 크기에 어떤 영향을 미치게 되는가?

(3)   제안한 두가지 확장으로 인하여, RISC-V 어셈블리 프로그램 중 일부는 길이가 길어졌다고 한다. 이유는 무엇이었을까? 

(4)   제안한 두가지 확장으로 인하여, RISC-V 어셈블리 프로그램 중 일부는 길이가 짧아졌다고 한다. 이유는 무엇이었을까? 

 
